package firstnoel;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import firstnoel.clientSummary.ActionJList;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.ListModel;

/*
 * Copyright (C) 2011
 * @author John Erol M. Evangelista
 * 
 * Academic Requirement for CS 11 HTYZ 1st Sem AY 2011-2012
 * Under the guidance of Prof. Mario Carreon
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * Website: http://opensource.org/licenses/gpl-license.php
 * 
 * 
 */

/*
 * EmployeeProfile.java
 *
 * Created on Jan 20, 2012, 10:27:14 PM
 */

/**
 *
 * @author erol
 */
public class EmployeeProfile extends javax.swing.JFrame implements ActionListener{
DefaultListModel orderList = new DefaultListModel();
    /** Creates new form EmployeeProfile */
    public EmployeeProfile() {
        initComponents();
        addClient.addActionListener((ActionListener)this);
        addEmployee.addActionListener((ActionListener)this);
        genReport.addActionListener((ActionListener)this);
        viewClientProf.addActionListener((ActionListener)this);
        viewEmployee.addActionListener((ActionListener)this);
        modifyE.addActionListener((ActionListener)this);
//        searchButton.addActionListener((ActionListener)this);
        jComboBox1.addActionListener((ActionListener)this);
        homeButton.addActionListener((ActionListener)this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        viewClientProf = new javax.swing.JButton();
        addClient = new javax.swing.JButton();
        viewEmployee = new javax.swing.JButton();
        addEmployee = new javax.swing.JButton();
        genReport = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        modifyE = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        currentAge = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        currentSex = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        currentStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList(orderList);
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        viewClientProf.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        viewClientProf.setText("View Client Profile");
        viewClientProf.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(viewClientProf);
        viewClientProf.setBounds(10, 190, 160, 30);

        addClient.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        addClient.setText("Add Client");
        jPanel2.add(addClient);
        addClient.setBounds(10, 240, 160, 30);

        viewEmployee.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        viewEmployee.setText("View Employee Profile");
        jPanel2.add(viewEmployee);
        viewEmployee.setBounds(10, 290, 160, 30);

        addEmployee.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        addEmployee.setText("Add Employee");
        jPanel2.add(addEmployee);
        addEmployee.setBounds(10, 360, 160, 30);

        genReport.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        genReport.setText("Generate Report");
        jPanel2.add(genReport);
        genReport.setBounds(10, 460, 160, 30);

        jLabel10.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel10.setText("EMPLOYEE");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(10, 330, 150, 20);

        modifyE.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        modifyE.setText("Modify");
        jPanel2.add(modifyE);
        modifyE.setBounds(10, 410, 160, 30);

        jLabel2.setFont(new java.awt.Font("Imprint MT Shadow", 0, 24)); // NOI18N
        jLabel2.setText("EMPLOYEE PROFILE");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(220, 140, 290, 30);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel3.setText("Name of Employee:");

        jLabel5.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel5.setText("Age:");

        currentAge.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        currentAge.setText("-");
        currentAge.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel7.setText("Sex:");

        currentSex.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        currentSex.setText("-");
        currentSex.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Search Employee:");

        jTextField1.setText("Enter Name");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        //String nameOfTherapist[]=null;

        String url = "jdbc:mysql://localhost:3306/firstnoel?AllowMultipleQueries=true";
        String user = "lian";
        String password = "lian";

        try {

            con = (Connection) DriverManager.getConnection(url, user, password);
            pst = (PreparedStatement) con.prepareStatement("SELECT * FROM employee");
            rs = pst.executeQuery();
            jComboBox1.addItem("Choose Therapist");
            while (rs.next()) {
                System.out.print(rs.getInt(1));
                System.out.print(": ");
                System.out.println(rs.getString(2));
                //nameOfTherapist[rs.getInt(1)-1] = rs.getString(2);
                jComboBox1.addItem(rs.getString(2));
            }

        } catch (SQLException ex) {
            Logger lgr = Logger.getLogger(AddEmployee.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);

        } finally {

            try {
                if (rs != null) {
                    rs.close();
                }
                if (pst != null) {
                    pst.close();
                }
                if (con != null) {
                    con.close();
                }

            } catch (SQLException ex) {
                Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                lgr.log(Level.WARNING, ex.getMessage(), ex);
            }
        }
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel4.setText("Current Status:");

        currentStatus.setText("-");
        currentStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jList1.addMouseListener(new ActionJList(jList1,this));
        jList1.setBackground(new java.awt.Color(240, 240, 240));
        jScrollPane1.setViewportView(jList1);

        jLabel6.setText("<html><font color=white size=4><pre>Order      Date            Service             Name of Client        </pre></font></html>");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(50, 50, 50)
                        .add(jLabel4)
                        .add(18, 18, 18)
                        .add(currentStatus))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(51, 51, 51)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(currentSex, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(currentAge))
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(9, 9, 9)
                                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(1152, 1152, 1152)
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(jButton1))))
                    .add(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 514, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 514, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(17, 17, 17)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel7)
                            .add(currentSex)
                            .add(jLabel5)
                            .add(currentAge)))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(44, 44, 44)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(3, 3, 3)
                        .add(jButton1)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(currentStatus))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(220, 190, 540, 430);

        jLabel11.setFont(new java.awt.Font("Perpetua Titling MT", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("FIRST NOEL CORPORATION");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(10, 60, 530, 50);

        homeButton.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        homeButton.setText("Home");
        jPanel2.add(homeButton);
        homeButton.setBounds(10, 140, 160, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg3.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(829, 630));
        jLabel1.setMinimumSize(new java.awt.Dimension(829, 630));
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 0, 790, 630);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 790, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 621, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button1ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeProfile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClient;
    private javax.swing.JButton addEmployee;
    private javax.swing.JLabel currentAge;
    private javax.swing.JLabel currentSex;
    private javax.swing.JLabel currentStatus;
    private javax.swing.JButton genReport;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButton1;
    public javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JList jList1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton modifyE;
    private javax.swing.JButton viewClientProf;
    private javax.swing.JButton viewEmployee;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent evt) {
        if(evt.getSource() == viewClientProf)
		{
			System.out.print("s");
			try {
				clientSummary client_sum = new clientSummary();
                                //client_sum.jPanel3.setVisible(true);
                                //client_sum.jTabbedPane1.setVisible(true);
				client_sum.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
              if(evt.getSource() == addClient)
		{
			System.out.print("s");
			try {
				GUIcs192 add_client = new GUIcs192();
				add_client.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(evt.getSource() == addEmployee)
		{
			System.out.print("s");
			try {
				AddEmployee add_employ = new AddEmployee();
				add_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(evt.getSource() == genReport)
		{
			System.out.print("s");
			try {
				GenReport gen_report = new GenReport();
				gen_report.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
           
            if(evt.getSource() == viewEmployee)
		{
			System.out.print("s");
			try {
				EmployeeProfile employ_prof = new EmployeeProfile();
				employ_prof.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(evt.getSource() == modifyE)
            {
                try {
				modifyEmployee mod_employ = new modifyEmployee();
				mod_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
            }
            if(evt.getSource() == homeButton)
		{
			System.out.print("s");
			try {
                            HomeView home = new HomeView();
                            home.setVisible(true);
                            this.setVisible(false);                            
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
		}
            
//            if(evt.getSource() == searchButton)
//            {
//              String hinahanapKo = searchName.getText();
//              String enterName = "Enter name";
//              if(hinahanapKo.equals("")||hinahanapKo.equals(enterName))
//              {
//                  System.out.println(":)");
//              }
//              else
//              {
//                  //hahanap na sa database :)
//                  System.out.println(":(");
//              }
//            }
            
            Connection con = null;
        ResultSet rs = null;
        PreparedStatement pst = null;
        String url = "jdbc:mysql://localhost:3306/firstnoel?allowMultiQueries=true";
         String user = "lian";
         String password = "lian";
         
         int employ_num = 0;
        int employ_status;
        String status = null;
        String new_status = null;
        String selectedTherapist;
        PreparedStatement therapist_choice;
        ResultSet therapistChoice;
        PreparedStatement transactionInfo;
        ResultSet setTransaction;
        PreparedStatement serviceInfo;
        ResultSet serviceSet;
        PreparedStatement overallTransaction;
        ResultSet overallSet;
        PreparedStatement clientInfo;
        ResultSet clientSet;
        int orderNumber;
        int serviceNumber;
        String orderDate="";
        int clientNumber;
        String clientName=" ";
        String finalString;
        
        String serviceName;
            if(evt.getSource() == jComboBox1)
            {
 
                try {
                    orderList.removeAllElements();
                    con = (Connection) DriverManager.getConnection(url, user, password);

                    selectedTherapist = jComboBox1.getSelectedItem().toString();
                    //int employ_num;
                    String query2 = "SELECT *, (YEAR(curdate())-YEAR(e_birthday))- (RIGHT(curdate(),5)<RIGHT(e_birthday,5)) AS age FROM employee WHERE employee.e_name=?";

                    therapist_choice = (PreparedStatement) con.prepareStatement(query2);
                    therapist_choice.setString(1,selectedTherapist);
                    therapistChoice = therapist_choice.executeQuery();
                    if(therapistChoice.next()){
                    employ_num = therapistChoice.getInt(1);
                    employ_status = therapistChoice.getInt(3);
                    if(employ_status==0)
                    {
                        status = "INACTIVE";
                        
                    }
                    else if (employ_status==1)
                    {
                        status="ACTIVE";
                         
                    }
                    currentStatus.setText(status);
                    int bagongAge = therapistChoice.getInt(7);
                    String newAge = Integer.toString(bagongAge);
                    
                    currentAge.setText(newAge);
                    currentSex.setText(therapistChoice.getString(4));
                    
                    transactionInfo = (PreparedStatement) con.prepareStatement("SELECT * FROM orderservice WHERE EmployNum = ?");
                    transactionInfo.setInt(1,employ_num);
                    setTransaction = transactionInfo.executeQuery();
                    
                    while(setTransaction.next())
                    {
                        orderNumber = setTransaction.getInt(1);
                        serviceNumber = setTransaction.getInt(2);
                        
                        serviceInfo = (PreparedStatement) con.prepareStatement("SELECT * FROM service WHERE s_number=?");
                        serviceInfo.setInt(1,serviceNumber);
                        serviceSet = serviceInfo.executeQuery();
                        serviceSet.next();
                        serviceName = serviceSet.getString(2);
                        
                        overallTransaction = (PreparedStatement) con.prepareStatement("SELECT * FROM clientorder WHERE o_number=?");
                        overallTransaction.setInt(1,orderNumber);
                        overallSet = overallTransaction.executeQuery();
                        while(overallSet.next())
                        {
                            orderDate = overallSet.getString(2);
                            clientNumber = overallSet.getInt(4);
                            
                            clientInfo = (PreparedStatement) con.prepareStatement("SELECT * FROM client WHERE c_number=?");
                            clientInfo.setInt(1,clientNumber);
                            clientSet = clientInfo.executeQuery();
                            clientSet.next();
                            clientName = clientSet.getString(2);
                            
                        }
                        
                        finalString = orderNumber+"\t"+orderDate;
                        
                         finalString = finalString+'\u0009'+serviceName; 
                        
                         switch(serviceNumber)
                         {
                             case 1:
                                  finalString = finalString+"\t"+"\t"+"\t"+clientName;
                                  break;
                             case 2:
                                   finalString = finalString+"\t"+"\t"+clientName;
                                   break;
                             case 3:
                                   finalString = finalString+"\t"+"\t"+"\t"+clientName;
                                   break;
                             case 4:
                                   finalString = finalString+"\t"+"\t"+"\t"+clientName;
                                   break;
                             case 5:
                                   finalString = finalString+"\t"+"\t"+clientName;
                                   break;
                             case 6:
                                   finalString = finalString+"\t"+"\t"+"\t"+clientName;
                                   break;
                             case 7:
                                   finalString = finalString+"\t"+clientName;
                                   break;
                                   
                         }
                        
                         
                        
                        System.out.println(finalString); 
                        
                       // finalString.
                        orderList.addElement("<html><font color=white size=4><pre>"+finalString+"</pre></font></html>");
                        jList1.revalidate();
                        jList1.repaint();
                        
                        
                    }
                   }
                   else
                    {
                        currentStatus.setText("-");
                        currentAge.setText("-");
                        currentSex.setText("-");
                    }
                } catch (SQLException ex) {
                Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                lgr.log(Level.SEVERE, ex.getMessage(), ex);

                } finally {

                    try {
                        if (rs != null) {
                            rs.close();
                        }
                        if (pst != null) {
                            pst.close();
                        }
                        if (con != null) {
                            con.close();
                        }

                    } catch (SQLException ex) {
                        Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                        lgr.log(Level.WARNING, ex.getMessage(), ex);
                    }
                }
                
            }
        
    }
 class ActionJList extends MouseAdapter{
    protected JList list;
    EmployeeProfile c;

    public ActionJList(JList l, EmployeeProfile c){
    list = l;
    this.c = c;
    }

     

        @Override
    public void mouseClicked(MouseEvent e){
    if(e.getClickCount() == 2){
        int index = list.locationToIndex(e.getPoint());
        ListModel dlm = list.getModel();
        Object item = dlm.getElementAt(index);;
        list.ensureIndexIsVisible(index);
        String selectedOrder = item.toString().substring(36);
        //String selectedOrder = item.toString();
        System.out.println(selectedOrder);
        int ctr = 0;
        String lessenString = "";
        while(ctr<=5)
        {
            char compare = selectedOrder.charAt(ctr);
            System.out.println(compare);
            if(compare=='\t')
            {
                System.out.println("Space na daw");
                break;
            }
            else
            {
                System.out.println(compare);
                lessenString = lessenString+compare;
            }
            ctr++;
        }
        int selectedOrderNumber = Integer.parseInt(lessenString);
        
        System.out.println("Double clicked on " + selectedOrderNumber);
        transactionProfile transact_prof = new transactionProfile(selectedOrderNumber,jComboBox1.getSelectedItem());
        transact_prof.setVisible(true);
        this.c.setVisible(false);

        }
    }
    }
}
