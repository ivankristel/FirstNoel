package firstnoel;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * clientProfile.java
 *
 * Created on 01 19, 12, 11:38:26 PM
 */


/**
 *
 * @author ivankristel
 */
public class clientProfile extends javax.swing.JFrame implements ActionListener{
    public String selectedClient = "";
    
    /** Creates new form clientProfile */
    public clientProfile(String clientName) {
        
        selectedClient = clientName;
        initComponents();
        //System.out.println(selectedClient);
        addClient.addActionListener((ActionListener)this);
        addEmployee.addActionListener((ActionListener)this);
        genReport.addActionListener((ActionListener)this);
        viewClientProf.addActionListener((ActionListener)this);
        viewEmployee.addActionListener((ActionListener)this);
        homeButton.addActionListener((ActionListener)this);
        modifyE.addActionListener((ActionListener)this);
       searchButton.addActionListener((ActionListener)this); 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        viewClientProf = new javax.swing.JButton();
        addClient = new javax.swing.JButton();
        viewEmployee = new javax.swing.JButton();
        addEmployee = new javax.swing.JButton();
        genReport = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        modifyE = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        nameOfClient = new javax.swing.JLabel();
        clientOccupation = new javax.swing.JLabel();
        clientAddress1 = new javax.swing.JLabel();
        clientAddress2 = new javax.swing.JLabel();
        clientNumber1 = new javax.swing.JLabel();
        clientNumber2 = new javax.swing.JLabel();
        clientSex = new javax.swing.JLabel();
        clientAge = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultListModel servicePurchased = new DefaultListModel();
        jList1 = new javax.swing.JList(servicePurchased);
        searchButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        viewClientProf.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        viewClientProf.setText("View Client Profile");
        jPanel2.add(viewClientProf);
        viewClientProf.setBounds(10, 190, 160, 30);

        addClient.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        addClient.setText("Add Client");
        jPanel2.add(addClient);
        addClient.setBounds(10, 240, 160, 30);

        viewEmployee.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        viewEmployee.setText("View Employee Profile");
        jPanel2.add(viewEmployee);
        viewEmployee.setBounds(10, 290, 160, 30);

        addEmployee.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        addEmployee.setText("Add Employee");
        jPanel2.add(addEmployee);
        addEmployee.setBounds(10, 360, 160, 30);

        genReport.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        genReport.setText("Generate Report");
        jPanel2.add(genReport);
        genReport.setBounds(10, 460, 160, 30);

        jLabel9.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel9.setText("EMPLOYEE");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 330, 150, 20);

        modifyE.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        modifyE.setText("Modify");
        jPanel2.add(modifyE);
        modifyE.setBounds(10, 410, 160, 30);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel2.setText("Client Name:");

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel3.setText("Address:");

        jLabel4.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel4.setText("Contact Number:");

        jLabel5.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel5.setText("Sex:");

        jLabel6.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel6.setText("Services availed:");

        jLabel7.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel7.setText("Age:");

        jLabel13.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel13.setText("Occupation:");

        nameOfClient.setBackground(new java.awt.Color(255, 204, 204));
        nameOfClient.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        nameOfClient.setText("-");
        nameOfClient.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientOccupation.setBackground(new java.awt.Color(204, 204, 255));
        clientOccupation.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientOccupation.setText("-");
        clientOccupation.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientAddress1.setBackground(new java.awt.Color(204, 204, 255));
        clientAddress1.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientAddress1.setText("-");
        clientAddress1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientAddress2.setBackground(new java.awt.Color(204, 204, 255));
        clientAddress2.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientAddress2.setText("-");
        clientAddress2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientNumber1.setBackground(new java.awt.Color(204, 204, 255));
        clientNumber1.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientNumber1.setText("-");
        clientNumber1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientNumber2.setBackground(new java.awt.Color(204, 204, 255));
        clientNumber2.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientNumber2.setText("-");
        clientNumber2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientSex.setBackground(new java.awt.Color(204, 204, 255));
        clientSex.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientSex.setText("-");
        clientSex.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        clientAge.setBackground(new java.awt.Color(204, 204, 255));
        clientAge.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        clientAge.setText("-");
        clientAge.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jList1.setBackground(new java.awt.Color(204, 204, 255));
        jList1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(clientSex)
                                .addGap(86, 86, 86)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clientAge)))
                        .addContainerGap(67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nameOfClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clientNumber2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(clientNumber1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(clientAddress1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                    .addComponent(clientAddress2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(clientOccupation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameOfClient, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(clientAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(clientAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(clientOccupation, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(clientNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientNumber2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(clientSex)
                    .addComponent(clientAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(220, 190, 370, 400);
        Connection con = null;
        PreparedStatement viewClient = null;
        ResultSet clientInfo = null;
        int orderID;
        System.out.println("test");
        int IDclient;
        PreparedStatement getServiceName = null;
        ResultSet ServiceNameSet = null;
        String checklength;
        // selectedClient = clientName;
        String url = "jdbc:mysql://localhost:3306/firstnoel?allowMultiQueries=true";
        String user = "lian";
        String password = "lian";
        try {

            con = (Connection) DriverManager.getConnection(url, user, password);

            String query = "SELECT *, (YEAR(curdate())-YEAR(Client.c_birthday))- (RIGHT(curdate(),5)<RIGHT(Client.c_birthday,5)) AS age FROM client WHERE c_name = ?";

            viewClient = (PreparedStatement) con.prepareStatement(query);
            viewClient.setString(1,selectedClient);
            System.out.println(selectedClient);
            clientInfo = viewClient.executeQuery();
            clientInfo.next();
            IDclient = clientInfo.getInt(1);
            nameOfClient.setText(clientInfo.getString(2));
            checklength = clientInfo.getString(8);
            if(checklength.length()>38)
            {
                clientAddress1.setText(checklength.substring(0, 38));
                clientAddress2.setText(checklength.substring(39));
            }
            else
            {
                clientAddress1.setText(checklength);
            }

            clientOccupation.setText(clientInfo.getString(5));
            clientNumber1.setText(clientInfo.getString(6));
            clientNumber2.setText(clientInfo.getString(7));
            clientSex.setText(clientInfo.getString(3));
            //query = "SELECT (YEAR(curdate())-YEAR(Client.c_birthday))- (RIGHT(curdate(),5)<RIGHT(Client.c_birthday,5)) AS age FROM client WHERE c_name = '"+ clientInfo.getString(2)+"'";

            //viewClient = (PreparedStatement) con.prepareStatement(query);
            //clientInfo = viewClient.executeQuery();
            int bagongAge = clientInfo.getInt(9);
            String newAge = Integer.toString(bagongAge);
            clientAge.setText(newAge);

            PreparedStatement pst = null;
            PreparedStatement lookForQuery;
            ResultSet lookSet;
            ResultSet rs = null;

            String lookquery = "SELECT * from clientorder WHERE clientID = ?";
            lookForQuery = (PreparedStatement) con.prepareStatement(lookquery);
            lookForQuery.setInt(1,IDclient);
            lookSet = lookForQuery.executeQuery();
            while(lookSet.next())
            {

                pst = (PreparedStatement) con.prepareStatement("SELECT * FROM orderservice WHERE OrderNum=?");
                orderID = lookSet.getInt(1);
                pst.setInt(1, orderID);
                rs = pst.executeQuery();
                //jComboBox1.addItem("Choose Therapist");
                while (rs.next()) {
                    System.out.print(rs.getInt(1));
                    System.out.print(": ");
                    //System.out.println(rs.getString(2));

                    getServiceName = (PreparedStatement) con.prepareStatement("SELECT * FROM service WHERE s_number=?");

                    getServiceName.setInt(1, rs.getInt(2));
                    ServiceNameSet = getServiceName.executeQuery();
                    ServiceNameSet.next();
                    servicePurchased.addElement(ServiceNameSet.getString(2));

                }

            }
        } catch (SQLException ex) {
            Logger lgr = Logger.getLogger(AddEmployee.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);

        } finally {

            try {
                if (clientInfo != null) {
                    clientInfo.close();
                }
                if (viewClient != null) {
                    viewClient.close();
                }
                if (con != null) {
                    con.close();
                }

            } catch (SQLException ex) {
                Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                lgr.log(Level.WARNING, ex.getMessage(), ex);
            }
        }

        searchButton.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        searchButton.setText("Search");
        jPanel2.add(searchButton);
        searchButton.setBounds(680, 270, 90, 30);

        searchTextField.setText("Search");
        jPanel2.add(searchTextField);
        searchTextField.setBounds(680, 230, 90, 30);

        jLabel8.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jLabel8.setText("Search Client:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(660, 190, 110, 30);

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FIRST NOEL CORPORATION");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 60, 530, 50);

        jLabel11.setFont(new java.awt.Font("Imprint MT Shadow", 0, 24)); // NOI18N
        jLabel11.setText("CLIENT PROFILE");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(220, 140, 240, 30);

        homeButton.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        homeButton.setText("Home");
        jPanel2.add(homeButton);
        homeButton.setBounds(10, 140, 160, 30);

        jLabel10.setFont(new java.awt.Font("Goudy Old Style", 1, 14)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg3.png"))); // NOI18N
        jLabel10.setMaximumSize(new java.awt.Dimension(829, 630));
        jLabel10.setMinimumSize(new java.awt.Dimension(829, 630));
        jPanel2.add(jLabel10);
        jLabel10.setBounds(0, 0, 790, 630);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clientProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clientProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clientProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clientProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        
        
   
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                String name = "Judith Reyes";
                //new clientProfile().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClient;
    private javax.swing.JButton addEmployee;
    private javax.swing.JLabel clientAddress1;
    private javax.swing.JLabel clientAddress2;
    private javax.swing.JLabel clientAge;
    private javax.swing.JLabel clientNumber1;
    private javax.swing.JLabel clientNumber2;
    private javax.swing.JLabel clientOccupation;
    private javax.swing.JLabel clientSex;
    private javax.swing.JButton genReport;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifyE;
    public javax.swing.JLabel nameOfClient;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton viewClientProf;
    private javax.swing.JButton viewEmployee;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent evt) {
       if(evt.getSource() == viewClientProf)
		{
			System.out.print("s");
			try {
				clientSummary client_sum = new clientSummary();
                                //client_sum.jPanel3.setVisible(true);
                                //client_sum.jTabbedPane1.setVisible(true);
				client_sum.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
              if(evt.getSource() == addClient)
		{
			System.out.print("s");
			try {
				GUIcs192 add_client = new GUIcs192();
				add_client.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(evt.getSource() == addEmployee)
		{
			System.out.print("s");
			try {
				AddEmployee add_employ = new AddEmployee();
				add_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(evt.getSource() == genReport)
		{
			System.out.print("s");
			try {
				GenReport gen_report = new GenReport();
				gen_report.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
           
            if(evt.getSource() == viewEmployee)
		{
			System.out.print("s");
			try {
				EmployeeProfile employ_prof = new EmployeeProfile();
				employ_prof.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(evt.getSource() == homeButton)
		{
			System.out.print("s");
			try {
                            HomeView home = new HomeView();
                            home.setVisible(true);
                            this.setVisible(false);                            
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
		}
            if(evt.getSource() == modifyE)
            {
                try {
				modifyEmployee mod_employ = new modifyEmployee();
				mod_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
            }
            
             if(evt.getSource() == homeButton)
		{
			System.out.print("s");
			try {
                            HomeView home = new HomeView();
                            home.setVisible(true);
                            this.setVisible(false);                            
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
		}
            
            
             if(evt.getSource() == searchButton)
             {
//                 System.out.println("search button clicked!");
                 ResultSet rs = null;
                 Connection con = null;
                 PreparedStatement searchClient = null;
                 PreparedStatement pst = null;
                 ResultSet searchSet = null;
                 String pickedName;
                String url = "jdbc:mysql://localhost:3306/firstnoel?allowMultiQueries=true";
                String user = "lian";
                String password = "lian";
                 
                 
                    try {

                    con = (Connection) DriverManager.getConnection(url, user, password);
                   
                    pickedName = searchTextField.getText();
                     System.out.println(pickedName);
                    //int employ_num;
                    String searchQuery = "SELECT * FROM client WHERE c_name=?";

                    searchClient = (PreparedStatement) con.prepareStatement(searchQuery);
                    searchClient.setString(1,pickedName);
                    searchSet = searchClient.executeQuery();
                    
                    
                    if(searchSet.next()==false)
                    {
                        System.out.println("WALA DAW");
                        JOptionPane.showMessageDialog(null, "Client does not exist!");
//                        clientExist.setText("New Client");
//                        doesExist = 0;
                        validate();
                        repaint();
                    }
                    else
                    {
                        
                        System.out.println("MERON:))))))))))");
                        clientSummary c = new clientSummary();
                        clientProfile client_prof = new clientProfile(pickedName);
                        client_prof.setVisible(true);
                        c.setVisible(false);
//                        clientExist.setText("Existing Client");
//                        doesExist = 1;
//                        numberOfExistClient = Integer.toString(searchSet.getInt(1));
//                        IDClient.setText(numberOfExistClient);
//                        cSexInput.setText(searchSet.getString(3));
//                        cAgeInput.setText(searchSet.getString(4));
//                        cOccupationInput.setText(searchSet.getString(5));
//                        cContactInput1.setText(searchSet.getString(6));
//                        cContactInput2.setText(searchSet.getString(7));
//                        cAddressInput1.setText(searchSet.getString(8));
                        //cAddressInput2.setText(searchSet.getString(8).substring(41, 75));
                        
                        validate();
                        repaint();
                    }

                } catch (SQLException ex) {
                Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                lgr.log(Level.SEVERE, ex.getMessage(), ex);

                } finally {

                    try {
                        if (rs != null) {
                            rs.close();
                        }
                        if (pst != null) {
                            pst.close();
                        }
                        if (con != null) {
                            con.close();
                        }

                    } catch (SQLException ex) {
                        Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                        lgr.log(Level.WARNING, ex.getMessage(), ex);
                    }
                }
                 
                         
             }
           
    
    
           
    
            
            
    }

}
