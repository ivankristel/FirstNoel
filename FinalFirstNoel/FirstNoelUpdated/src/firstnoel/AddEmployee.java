package firstnoel;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author erol
 */
public class AddEmployee extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form HomeView
     */
    public AddEmployee() {
        initComponents();
        
        saveEmployee.addActionListener((ActionListener)this); 
        addClient.addActionListener((ActionListener)this);
        addEmployee.addActionListener((ActionListener)this);
        genReport.addActionListener((ActionListener)this);
        viewClientProf.addActionListener((ActionListener)this);
        viewEmployee.addActionListener((ActionListener)this);
        modifyE.addActionListener((ActionListener)this);
        jButton7.addActionListener((ActionListener)this);
        homeButton.addActionListener((ActionListener)this);
        eNameInput.addKeyListener(new KeyAdapter(){
            @Override
            public void keyTyped(KeyEvent e){
                char c = e.getKeyChar();
                if(!((Character.isLetter(c)) || (c == KeyEvent.VK_BACK_SPACE) || (Character.isSpaceChar(c))
                        || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_DELETE))){
                    getToolkit().beep();
                    e.consume();
                }         
            } 
        });
        
        eSexInput.addKeyListener(new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (!((c == 'F') || (c == 'M') ||(c == 'f') || (c == 'm') ||
                (c == KeyEvent.VK_BACK_SPACE) ||
                (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
            }
            }
        });
        eAgeInput.addKeyListener(new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (!((c >= '0') && (c <= '9') ||
                (c == KeyEvent.VK_BACK_SPACE) ||
                (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
            }
            }
        });
       eBdayInput.addKeyListener(new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (!((c >= '0') && (c <= '9') ||
                (c == KeyEvent.VK_BACK_SPACE) ||
                (c == KeyEvent.VK_SLASH) ||
                (c == KeyEvent.VK_MINUS) ||
                (c == KeyEvent.VK_DELETE))) {
                getToolkit().beep();
                e.consume();
            }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        viewClientProf = new javax.swing.JButton();
        addClient = new javax.swing.JButton();
        viewEmployee = new javax.swing.JButton();
        addEmployee = new javax.swing.JButton();
        genReport = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        modifyE = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eNameInput = new javax.swing.JTextField();
        eSexInput = new javax.swing.JTextField();
        eBdayInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        eAddressInput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        eAgeInput = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        saveEmployee = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        viewClientProf.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        viewClientProf.setText("View Client Profile");
        jPanel2.add(viewClientProf);
        viewClientProf.setBounds(10, 190, 160, 30);

        addClient.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        addClient.setText("Add Client");
        jPanel2.add(addClient);
        addClient.setBounds(10, 240, 160, 30);

        viewEmployee.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        viewEmployee.setText("View Employee Profile");
        jPanel2.add(viewEmployee);
        viewEmployee.setBounds(10, 290, 160, 30);

        addEmployee.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        addEmployee.setText("Add Employee");
        jPanel2.add(addEmployee);
        addEmployee.setBounds(10, 360, 160, 30);

        genReport.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        genReport.setText("Generate Report");
        jPanel2.add(genReport);
        genReport.setBounds(10, 460, 160, 30);

        jLabel4.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel4.setText("EMPLOYEE");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(10, 330, 150, 20);

        modifyE.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        modifyE.setText("Modify");
        jPanel2.add(modifyE);
        modifyE.setBounds(10, 410, 160, 30);

        jLabel2.setFont(new java.awt.Font("Imprint MT Shadow", 0, 24)); // NOI18N
        jLabel2.setText("EMPLOYEE PROFILE");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(220, 140, 290, 30);

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jLabel3.setText("Name of Employee:");

        jLabel5.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jLabel5.setText("Birthday:");

        jLabel7.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jLabel7.setText("Sex:");

        eNameInput.setText("Enter Name");

        eSexInput.setText("M/F");
        eSexInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eSexInputActionPerformed(evt);
            }
        });

        eBdayInput.setText("YYYY-MM-DD");
        eBdayInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eBdayInputActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jLabel6.setText("Employee Address:");

        eAddressInput.setText("Enter Address");
        eAddressInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eAddressInputActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jLabel8.setText("Age:");

        eAgeInput.setText("Age");
        eAgeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eAgeInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(eAddressInput, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eSexInput, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(eAgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(eNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eBdayInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eNameInput))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(eSexInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(eAgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(eBdayInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(eAddressInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143))
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(220, 190, 460, 230);

        jLabel9.setFont(new java.awt.Font("Perpetua Titling MT", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("FIRST NOEL CORPORATION");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 60, 530, 50);

        saveEmployee.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        saveEmployee.setText("Save Employee Profile");
        saveEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEmployeeActionPerformed(evt);
            }
        });
        jPanel2.add(saveEmployee);
        saveEmployee.setBounds(250, 460, 203, 29);

        jButton7.setFont(new java.awt.Font("Goudy Old Style", 1, 16)); // NOI18N
        jButton7.setText("Cancel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);
        jButton7.setBounds(490, 460, 120, 29);

        homeButton.setFont(new java.awt.Font("Lucida Handwriting", 0, 10)); // NOI18N
        homeButton.setText("Home");
        jPanel2.add(homeButton);
        homeButton.setBounds(10, 140, 160, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg3.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 0, 790, 630);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eSexInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eSexInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eSexInputActionPerformed

    private void eBdayInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eBdayInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eBdayInputActionPerformed

    private void eAddressInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eAddressInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eAddressInputActionPerformed

    private void eAgeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eAgeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eAgeInputActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void saveEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveEmployeeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AddEmployee().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClient;
    private javax.swing.JButton addEmployee;
    private javax.swing.JTextField eAddressInput;
    private javax.swing.JTextField eAgeInput;
    private javax.swing.JTextField eBdayInput;
    private javax.swing.JTextField eNameInput;
    private javax.swing.JTextField eSexInput;
    private javax.swing.JButton genReport;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton modifyE;
    private javax.swing.JButton saveEmployee;
    private javax.swing.JButton viewClientProf;
    private javax.swing.JButton viewEmployee;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        Statement st = null;
        ResultSet rs = null;
        //ResultSet gs = null;
        PreparedStatement pst = null;
        Connection con = null;
        String nameInput;
        String sexInput;
        String ageInput;
        String addressInput;
        String bdayInput;
       
       // Properties props = new Properties();
       // FileInputStream in = null;
           if(e.getSource() == saveEmployee)
            {
                
                 nameInput = eNameInput.getText();
                sexInput = eSexInput.getText();
                ageInput = eAgeInput.getText();
                bdayInput = eBdayInput.getText();
                addressInput = eAddressInput.getText();
                JFrame frame = new JFrame();
                
                
//                   String namePattern = "[a-zA-Z ]*";
/*                String bdayPattern = "^(0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[01])[/](19|20)\\d\\d";
                Boolean validDate = false;
                String delims = "[/]+";
                String[] tokens = new String[0];
                for(int i = 0; i < 3; i++){
                    tokens = bdayInput.split(delims);
                    bday.add(Integer.parseInt(tokens[i]));
                    System.out.println(bday);
//                    start.add(Integer.parseInt(tokens[++i]));                
                }
                
                if(bday.elementAt(2)%(4) == 0){
                    System.out.println("LEAP YEAR!!!");
                    if((bday.elementAt(0) == 1)||(bday.elementAt(0) == 3)||(bday.elementAt(0) == 5)
                            ||(bday.elementAt(0) == 7) ||(bday.elementAt(0) == 8) ||(bday.elementAt(0) == 10) 
                            ||(bday.elementAt(0) == 12)){
                        System.out.println("month: " + bday.elementAt(0));
                        if((bday.elementAt(1) > 0) && (bday.elementAt(1) <= 31)){
                            //Valid!
                            validDate = true;
                        }else{
                            //Invalid
                            validDate = false;
                        }                
                    }else if(bday.elementAt(0) == 2){
                        System.out.println("month: " + bday.elementAt(0));
                        if((bday.elementAt(1) > 0) && (bday.elementAt(1) <= 29)){
                            //Valid!
                            validDate = true;
                        }else{
                            //Invalid
                            validDate = false;
                        }
                    }else if((bday.elementAt(0) == 4)||(bday.elementAt(0) == 6)||(bday.elementAt(0) == 9) ||(bday.elementAt(0) == 11)){
                        System.out.println("month: " + bday.elementAt(0));
                        if((bday.elementAt(1) > 0) && (bday.elementAt(1) <= 30)){
                            //Valid!
                            validDate = true;
                        }else{
                            //Invalid
                            validDate = false;
                        }
                    }
                    
                
               }else{
                    System.out.println("NOT LEAP YEAR!!!");
                    if((bday.elementAt(0) == 1)||(bday.elementAt(0) == 3)||(bday.elementAt(0) == 5)
                            ||(bday.elementAt(0) == 7) ||(bday.elementAt(0) == 8) ||(bday.elementAt(0) == 10) 
                            ||(bday.elementAt(0) == 12)){
                        System.out.println("month: " + bday.elementAt(0));
                        if((bday.elementAt(1) > 0) && (bday.elementAt(1) <= 31)){
                            //Valid!
                            validDate = true;
                        }else{
                            //Invalid
                            validDate = false;
                        }                
                    }else if(bday.elementAt(0) == 2){
                        System.out.println("month: " + bday.elementAt(0));
                        if((bday.elementAt(1) > 0) && (bday.elementAt(1) <= 28)){
                            //Valid!
                            validDate = true;
                        }else{
                            //Invalid
                            validDate = false;
                        }
                    }else if((bday.elementAt(0) == 4)||(bday.elementAt(0) == 6)||(bday.elementAt(0) == 9) ||(bday.elementAt(0) == 11)){
                        System.out.println("month: " + bday.elementAt(0));
                        if((bday.elementAt(1) > 0) && (bday.elementAt(1) <= 30)){
                            //Valid!
                            validDate = true;
                        }else{
                            //Invalid
                            validDate = false;
                        }
                    }
                }    
*/                
                   //!nameInput.matches(namePattern)  ||
                          
                    if((nameInput.equals("")||nameInput.equals("Enter name")) 
                            || (sexInput.equals("")||sexInput.equals("M/F"))
                            || (ageInput.equals("")||ageInput.equals("Age"))
                            || (bdayInput.equals("")||bdayInput.equals("YYYY-MM-DD"))
                            || (addressInput.equals("")||addressInput.equals("Enter Address"))){
        //               JFrame frame = new JFrame();
                    JOptionPane.showMessageDialog(frame, "Please fill in all the missing fields.");
                        }
                    else {
                        if(!(sexInput.matches("[m]") || sexInput.matches("[M]") || sexInput.matches("[F]") || sexInput.matches("[f]"))){
                            JOptionPane.showMessageDialog(frame, "Invalid input!");
                            System.out.close();
                        }else{ 
                            try {

                                String url = "jdbc:mysql://localhost:3306/firstnoel?allowMultiQueries=true";
                                String user = "lian";
                                String password = "lian";

                                try {  
                                    con = (Connection) DriverManager.getConnection(url, user, password);
                                    st = (Statement) con.createStatement();
                                            rs = st.executeQuery("SELECT VERSION()");

                                            if (rs.next()) {
                                                System.out.println(rs.getString(1));
                                            }
                                            System.out.println("CHECKING");

                                }catch (SQLException ex) {
                                    Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                                    lgr.log(Level.SEVERE, ex.getMessage(), ex);

                                }finally {
                                    try {
                                        if (rs != null) {
                                            rs.close();
                                        }
                                        if (st != null) {
                                            st.close();
                                        }
                                        if (con != null) {
                                            con.close();
                                        }

                                    }catch (SQLException ex) {
                                        Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                                        lgr.log(Level.WARNING, ex.getMessage(), ex);
                                        }
                                }
                                    nameInput = eNameInput.getText();
                                    sexInput = eSexInput.getText();
                                    ageInput = eAgeInput.getText();
                                    bdayInput = eBdayInput.getText();
                                    addressInput = eAddressInput.getText();
                                    System.out.println("test");

                                try{ 
                                    con = (Connection) DriverManager.getConnection(url, user, password); 
                                    con.setAutoCommit(false);
                                    //String query = "INSERT INTO employee(e_name) VALUES(?)" + "INSERT INTO employee(e) VALUES(?,?,?)";
                                    pst = (PreparedStatement) con.prepareStatement("INSERT INTO employee(e_name,e_status,e_gender,e_birthday,e_address) VALUES(?,?,?,?,?)");   
                                    pst.setString(1,nameInput);
                                    pst.setBoolean(2,true);
                                    pst.setString(3,sexInput);
                                    //pst.setString(4,ageInput);
                                    pst.setString(4,bdayInput);
                                    pst.setString(5,addressInput);
                                    //System.out.print(nameInput + " " + sexInput +" "+ ageInput);
                                    pst.executeUpdate();

                                    System.out.println("d2 ba nagkamali?");
                                    con.commit();

                                    JOptionPane.showMessageDialog(frame, "Employee's information saved!");

                                } catch (SQLException ex) {
                                    System.out.println("something's wrong");

                                    if (con != null) {
                                        try {
                                            con.rollback();
                                        } catch (SQLException ex1) {
                                            Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                                            lgr.log(Level.WARNING, ex1.getMessage(), ex1);
                                        }

                                    }
                                    Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                                    lgr.log(Level.SEVERE, ex.getMessage(), ex);

                                } finally {

                                    try {
                                        if (pst != null) {
                                            pst.close();
                                        }
                                        if (con != null) {
                                            con.close();
                                        }

                                    } catch (SQLException ex) {
                                        Logger lgr = Logger.getLogger(AddEmployee.class.getName());
                                        lgr.log(Level.SEVERE, ex.getMessage(), ex);
                                    }
                                }
                            } catch (Exception e1) {
                                    // TODO Auto-generated catch block
                                    System.out.println("TEST");
                                    e1.printStackTrace();
                            }

                        }
                    }
            }
            if(e.getSource() == viewClientProf)
		{
			System.out.print("s");
			try {
				clientSummary client_sum = new clientSummary();
                                //client_sum.jPanel3.setVisible(true);
                                //client_sum.jTabbedPane1.setVisible(true);
				client_sum.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
              if(e.getSource() == addClient)
		{
			System.out.print("s");
			try {
				GUIcs192 add_client = new GUIcs192();
				add_client.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(e.getSource() == addEmployee)
		{
			System.out.print("s");
			try {
				AddEmployee add_employ = new AddEmployee();
				add_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(e.getSource() == genReport)
		{
			System.out.print("s");
			try {
				GenReport gen_report = new GenReport();
				gen_report.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
           
            if(e.getSource() == viewEmployee)
		{
			System.out.print("s");
			try {
				EmployeeProfile employ_prof = new EmployeeProfile();
				employ_prof.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(e.getSource() == modifyE)
            {
                try {
				modifyEmployee mod_employ = new modifyEmployee();
				mod_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
            }
            if(e.getSource() == jButton7)
		{
			System.out.print("s");
			try {
				AddEmployee add_employ = new AddEmployee();
				add_employ.setVisible(true);
				this.setVisible(false);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
			
		
		}
            if(e.getSource() == homeButton)
		{
			System.out.print("s");
			try {
                            HomeView home = new HomeView();
                            home.setVisible(true);
                            this.setVisible(false);                            
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				System.out.println("TEST");
				e1.printStackTrace();
			}
		}    
    }
}
