/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package firstnoel;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Label;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.jar.Attributes.Name;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import jxl.Cell;
import jxl.CellFormat;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.*;
import jxl.write.Number;


/**
 *
 * @author JulianFabic
 */
public class exportFile extends javax.swing.JFrame {
    int showOpenDialog;
    String selectedService;
    String selectedGraph;
    Connection con;
    PreparedStatement pst;
    ResultSet rs = null;
    /**
     * Creates new form exportFile
     */
    public exportFile(String service, String graphWith) {
        initComponents();
        File curfile = db.getSelectedFile();
        selectedService = service;
        selectedGraph = graphWith;
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        db = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        db.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        db.setApproveButtonText("Save");
        db.setApproveButtonToolTipText("Save");
        db.setFileFilter(new MyCustomFilter());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exportFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exportFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exportFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exportFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /*
         * Create and display the form
         */
         
        
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new exportFile("s","s").setVisible(true);
               
            }
        });*/
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JFileChooser db;
    // End of variables declaration//GEN-END:variables
   
    
    
    
    class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".csv");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            //return "Text documents (*.txt)";
            return "Excel documents (*.csv)";
        }
    }
    public void save()
    {
        System.out.println(selectedService+"toink");
        System.out.println(selectedGraph+"checking");
        showOpenDialog = db.showSaveDialog(exportFile.this);
        
        if(showOpenDialog == db.APPROVE_OPTION)
        {
            System.out.println("SAVE ANG PININDOT!"+showOpenDialog);
            if(db.getSelectedFile()!=null)
            {
                System.out.println(db.getSelectedFile().toString());
                String file = db.getSelectedFile().toString();
                
                try 
                {
                                    
                    try {
                        String text = (file);
                        System.out.println(text);
                        boolean FileExists = (new File(text)).exists();
                        if(!FileExists)
                        {
                              int response = JOptionPane.showOptionDialog(
                               null                       // Center in window.
                             , "Continue exporting the file?"        // Message
                             , "Create File"               // Title in titlebar
                             , JOptionPane.YES_NO_OPTION  // Option type
                             , JOptionPane.PLAIN_MESSAGE  // messageType
                             , null                       // Icon (none)
                             , null             // Button text as above.
                             , "None of your business"    // Default button's label
                           );
                             if(response == JOptionPane.YES_OPTION)
                             {
                                    text = (file+".csv");
                                    System.out.println(text);
                                    WritableWorkbook createworkbook = Workbook.createWorkbook(new File(text));
                                    createworkbook.createSheet("New", 0);
                                    createworkbook.write();
                                    createworkbook.close();
                                    if(selectedGraph.equals("Age"))
                                    {
                                        ageIntoExcel(selectedService,"Age Breakdown"+selectedGraph,text); 
                                    }
                                    else if(selectedGraph.equals("Sex"))
                                    {
                                        sexIntoExcel(selectedService,"Age Breakdown"+selectedGraph,text); 
                                        System.out.println("NOTHING TO DO HERE");
                                    }
                             }
                             if(response == JOptionPane.NO_OPTION)
                             {
                                 JOptionPane.showMessageDialog(null, "Exporting to csv cancelled");
                             }
                             
                            
                        }
                        else
                        {
                          
                            int response = JOptionPane.showOptionDialog(
                               null                       // Center in window.
                             , "The filename already exists, overwrite the existing file?"        // Message
                             , "Create File"               // Title in titlebar
                             , JOptionPane.YES_NO_OPTION  // Option type
                             , JOptionPane.PLAIN_MESSAGE  // messageType
                             , null                       // Icon (none)
                             , null             // Button text as above.
                             , "None of your business"    // Default button's label
                           );
                             if(response == JOptionPane.YES_OPTION)
                             {
                                    //text = (file+".csv");
                                    System.out.println(text);
                                    File target = new File(text);
                                    target.delete();
                                    
                                    WritableWorkbook createworkbook = Workbook.createWorkbook(new File(text));
                                    createworkbook.createSheet("New", 0);
                                    createworkbook.write();
                                    createworkbook.close();
                                    if(selectedGraph.equals("Age"))
                                    {
                                        ageIntoExcel(selectedService,"Age Breakdown"+selectedGraph,text); 
                                    }
                                    else if(selectedGraph.equals("Sex"))
                                    {
                                        sexIntoExcel(selectedService,"Age Breakdown"+selectedGraph,text); 
                                        System.out.println("NOTHING TO DO HERE");
                                    }
                             }
                             if(response == JOptionPane.NO_OPTION)
                             {
                                 JOptionPane.showMessageDialog(null, "Exporting to csv cancelled");
                             }
                            
                        }
                        
                    } catch (WriteException ex) {
                        Logger.getLogger(GenReport.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                } 
                catch (IOException ex) 
                {
                    Logger.getLogger(GenReport.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
        else
        {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Exporting to csv cancelled");
            System.out.println("HINDI!");
            //this.setVisible(false);
            //JFrame newframe = new JFrame();
            //String[] choices = {"YES","NO"};

        }
    }
    
    ResultSet connect(String script)
    {
                String url = "jdbc:mysql://localhost:3306/firstnoel?allowMultiQueries=true";
                String user = "lian";
                String password = "lian";
        try {
            con = (Connection) DriverManager.getConnection(url, user, password);
            pst = (PreparedStatement) con.prepareStatement(script);
            rs = pst.executeQuery();
            return rs;
        } catch (SQLException ex) {
            Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rs;
                    
    }
    
    
     public int databaseQuerying(String script,String req){
                String url = "jdbc:mysql://localhost:3306/firstnoel?allowMultiQueries=true";
                String user = "lian";
                String password = "lian";
                //System.out.println("here");
                int total = 0;
                try {
                    

                    con = (Connection) DriverManager.getConnection(url, user, password);
                    pst = (PreparedStatement) con.prepareStatement(script);
                    rs = pst.executeQuery();
                    if(req.equals("total"))
                        while (rs.next()) {
                            total++;
                            System.out.println(rs.getString(1));
                        }
                    else if (req.equals("minmax")){
                        while (rs.next()) {
                        //rs.getInt(1);
                        total = rs.getInt(1);
                    }
                    }
                    System.out.println(total);
                    return total;

                } catch (SQLException ex) {
                        Logger lgr = Logger.getLogger(GenReport.class.getName());
                        lgr.log(Level.SEVERE, ex.getMessage(), ex);
                        return total;

                } finally {

                    try {
                        if (rs != null) {
                            rs.close();
                        }
                        if (pst != null) {
                            pst.close();
                        }
                        if (con != null) {
                            con.close();
                        }

                    } catch (SQLException ex) {
                        Logger lgr = Logger.getLogger(GenReport.class.getName());
                        lgr.log(Level.WARNING, ex.getMessage(), ex);
                    }
                    return total;
                }
    }
    
    void ageIntoExcel(String service,String title,String filename)
    {
        float agePercent[] = new float[5];
        if(service.equals("All Services")){
         
            String ageGroup[] = {"<18","18-25","25-40","40-60",">60"};
  
                        String script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_"
                                + "birthday,5)) AS age FROM clientOrder "
                                + "JOIN client ON Client.c_number = clientOrder"
                                + ".clientID WHERE (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))"
                                + "- (RIGHT(clientOrder.o_date,5)<RIGHT(Client."
                                + "c_birthday,5))<18 ";
                        agePercent[0] = this.databaseQuerying(script,"total");
                        
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_"
                                + "birthday,5)) AS age FROM clientOrder "
                                + "JOIN client ON Client.c_number = clientOrder"
                                + ".clientID WHERE (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))"
                                + "- (RIGHT(clientOrder.o_date,5)<RIGHT(Client."
                                + "c_birthday,5))>=18 AND (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))- (RIGHT(clien"
                                + "tOrder.o_date,5)<RIGHT(Client.c_birthday,5))<=25";
                        agePercent[1] = this.databaseQuerying(script,"total");
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_"
                                + "birthday,5)) AS age FROM clientOrder "
                                + "JOIN client ON Client.c_number = clientOrder"
                                + ".clientID WHERE (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))"
                                + "- (RIGHT(clientOrder.o_date,5)<RIGHT(Client."
                                + "c_birthday,5))>25 AND (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))- (RIGHT(clien"
                                + "tOrder.o_date,5)<RIGHT(Client.c_birthday,5))<=40";
                        agePercent[2] = this.databaseQuerying(script,"total");
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_"
                                + "birthday,5)) AS age FROM clientOrder "
                                + "JOIN client ON Client.c_number = clientOrder"
                                + ".clientID WHERE (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))"
                                + "- (RIGHT(clientOrder.o_date,5)<RIGHT(Client."
                                + "c_birthday,5))>40 AND (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))- (RIGHT(clien"
                                + "tOrder.o_date,5)<RIGHT(Client.c_birthday,5))<=60";
                        agePercent[3] = this.databaseQuerying(script,"total");
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_"
                                + "birthday,5)) AS age FROM clientOrder "
                                + "JOIN client ON Client.c_number = clientOrder"
                                + ".clientID WHERE (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday))"
                                + "- (RIGHT(clientOrder.o_date,5)<RIGHT(Client."
                                + "c_birthday,5))>60 ";
                        agePercent[4] = this.databaseQuerying(script,"total");

        }else
        {
            
            String ageGroup[] = {"<18","18-25","25-40","40-60",">60"};
  
                        String script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_birthday,5))"
                                + " AS age FROM service JOIN orderService ON "
                                + "orderService.serviceNum = Service.s_number "
                                + "JOIN clientOrder ON clientOrder.o_number = "
                                + "orderService.orderNum JOIN client ON "
                                + "Client.c_number = clientOrder.clientID WHERE"
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))<18 AND "
                                + "Service.s_name = '"+ service +"' "
                                + "GROUP BY Client.c_name, Client.c_birthday";
                        
                        agePercent[0] = this.databaseQuerying(script,"total");
                        
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_birthday,5))"
                                + " AS age FROM service JOIN orderService ON "
                                + "orderService.serviceNum = Service.s_number "
                                + "JOIN clientOrder ON clientOrder.o_number = "
                                + "orderService.orderNum JOIN client ON "
                                + "Client.c_number = clientOrder.clientID WHERE"
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))>=18 AND "
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))<=25 AND "
                                + "Service.s_name = '"+ service +"' "
                                + "GROUP BY Client.c_name, Client.c_birthday";
                        agePercent[1] = this.databaseQuerying(script,"total");
                        //System.out.println(script);
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_birthday,5))"
                                + " AS age FROM service JOIN orderService ON "
                                + "orderService.serviceNum = Service.s_number "
                                + "JOIN clientOrder ON clientOrder.o_number = "
                                + "orderService.orderNum JOIN client ON "
                                + "Client.c_number = clientOrder.clientID WHERE"
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))>25 AND "
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))<=40 AND "
                                + "Service.s_name = '"+ service +"' "
                                + "GROUP BY Client.c_name, Client.c_birthday";
                        agePercent[2] = this.databaseQuerying(script,"total");
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_birthday,5))"
                                + " AS age FROM service JOIN orderService ON "
                                + "orderService.serviceNum = Service.s_number "
                                + "JOIN clientOrder ON clientOrder.o_number = "
                                + "orderService.orderNum JOIN client ON "
                                + "Client.c_number = clientOrder.clientID WHERE"
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))>40 AND "
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))<=60 AND " 
                                + "Service.s_name = '"+ service +"' "
                                + "GROUP BY Client.c_name, Client.c_birthday";
                        agePercent[3] = this.databaseQuerying(script,"total");
                        script = "SELECT (YEAR(clientOrder.o_date)"
                                + "-YEAR(Client.c_birthday)) - "
                                + "(RIGHT(clientOrder.o_date,5)<RIGHT(Client.c_birthday,5))"
                                + " AS age FROM service JOIN orderService ON "
                                + "orderService.serviceNum = Service.s_number "
                                + "JOIN clientOrder ON clientOrder.o_number = "
                                + "orderService.orderNum JOIN client ON "
                                + "Client.c_number = clientOrder.clientID WHERE"
                                + " (YEAR(clientOrder.o_date)-YEAR(Client.c_birthday))"
                                +"- (RIGHT(clientOrder.o_date,5)"
                                + "<RIGHT(Client.c_birthday,5))>60 AND "
                                + "Service.s_name = '"+ service +"' "
                                + "GROUP BY Client.c_name, Client.c_birthday";
                        agePercent[4] = this.databaseQuerying(script,"total");
//                      JPanel report = this.drawPieChart(ageGroup,agePercent , title);
//                      return report;
        }
        
            
                        
                            String text = ("New.csv");
                            System.out.println(text);
                           String query,query1,query2,query3,query4,query5;
                                ResultSet check,check1,check2,check3,check4,check5;
                            try {
                                WritableWorkbook createworkbook = Workbook.createWorkbook(new File(text));
                                createworkbook.createSheet("New", 0);
                                createworkbook.write();
                                try {
                                    createworkbook.close();
                                } catch (WriteException ex) {
                                    Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                try {
                                    Workbook workbook= Workbook.getWorkbook(new File(text));
                                } catch (BiffException ex) {
                                    Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                FileWriter fw;
                                fw = new FileWriter(filename);
                                PrintWriter out = new PrintWriter(fw);
                                int j = 0;
                                out.println(service);
                                out.println("Age,<18, 18-25, 25-40, 40-60, >60");
                                out.print("Total ,");
                                for(int ctr=0;ctr<=4;ctr++)
                                {
                                    out.print(agePercent[ctr]+",");
                                }
                                out.print("\n");
                                System.out.println(service);
                                try 
                                {

                                    if(service.equals("All Services"))
                                    {
                                        System.out.println("ALL SERVICES DAW");
                                            query = "SELECT * FROM client JOIN clientOrder on c_number=clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum";
                                            check = connect(query);
                                            query1 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=18 ";
                                            check1 = connect(query1);

                                            query2 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>18 AND "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=25 ";
                                            check2 = connect(query2);

                                            query3 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>25 AND "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=40 ";
                                            check3 = connect(query3);

                                            query4 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>40 AND "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=60 ";
                                            check4 = connect(query4);

                                            query5 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>60 ";
                                            check5 = connect(query5);
                                    }
                                    else
                                    {
                                            query = "SELECT * FROM client JOIN clientOrder on c_number=clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"s_name ="
                                                            +"'"+service+"'";
                                            check = connect(query);
                                            query1 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=18 "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check1 = connect(query1);

                                            query2 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>=18 AND "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=25 "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check2 = connect(query2);

                                            query3 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>25 AND "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=40 "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check3 = connect(query3);

                                            query4 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>40 AND "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))<=60 "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check4 = connect(query4);

                                            query5 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"(YEAR(o_date)-YEAR(c_birthday)) "
                                                            +"-(RIGHT(o_date,5) "
                                                            +"<RIGHT(c_birthday,5))>60 "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check5 = connect(query5);
                                    }
                                    int donecheck2 = 0;
                                    int donecheck3 = 0;
                                    int donecheck4 = 0;
                                    int donecheck5 = 0;
                                    int donecheck6 = 0;
                                    int ctr = 1;
                                    int jctr = 1;
                                    int next1 = 0;
                                    int next2 = 0;
                                    int next3 = 0;
                                    int next4 = 0;
                                    int next5 = 0;
                                    String name = null;
                                    String name2 = null;
                                    String name3 = null;
                                    String name4 = null;
                                    String name5 = null;

                                    while(check.next())
                                    {
                                            if(check1.next())
                                            {
                                                name = check1.getString(2);

                                                next1 = 0;
                                            }
                                            else
                                            {
                                                next1 = 1;
                                            }
                                            if(donecheck2==0||next1==0)
                                            {
                                                out.print(",");
                                                if(next1==0)
                                                {

                                                    String clientDetails = name;
                                                    //System.out.println(name);
                                                    out.print(clientDetails);
                                                    out.print(" ");
                                                    donecheck2=0;
                                                }   

                                                        System.out.println(ctr);
                                                        ctr++;
                                                        if(check2.next())
                                                        {
                                                            name2 = check2.getString(2);
                                                            next2 = 0;
                                                        }
                                                        else
                                                        {
                                                            next2 = 1;
                                                        }
                                                        if(donecheck3==0||next2==0)
                                                        {
                                                            System.out.println(jctr);
                                                            jctr++;
                                                            out.print(",");
                                                            if(next2==0)
                                                            {
                                                                //System.out.print(check2.getInt(1));
                                                            // System.out.println(check2.getString(2));

                                                                String clientDetails2 = name2;
                                                                //System.out.println(name2);
                                                                out.print(clientDetails2);  
                                                                out.print(" ");
                                                                donecheck3=0;
                                                            }
                                                                if(check3.next())
                                                                {
                                                                    name3 = check3.getString(2);
                                                                    next3 = 0;
                                                                }
                                                                else
                                                                {
                                                                    next3 = 1;
                                                                }
                                                                if(donecheck4==0||next3==0)
                                                                {
                                                                    out.print(",");
                                                                    if(next3==0)
                                                                    {


                                                                        String clientDetails3 = name3;
                                                                    // System.out.println(name3);
                                                                        out.print(clientDetails3);  
                                                                        out.print(" ");
                                                                        donecheck4=0;
                                                                    }   
                                                                            if(check4.next())
                                                                            {
                                                                                name4 = check4.getString(2);
                                                                                next4 = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                next4 = 1;
                                                                            }
                                                                            if(donecheck5==0||next4==0)
                                                                            {
                                                                                out.print(",");
                                                                                if(next4==0)
                                                                                {


                                                                                String clientDetails4 = name4;
                                                                                //System.out.println(name4);
                                                                                out.print(clientDetails4);  
                                                                                out.print(" ");
                                                                                donecheck5=0;
                                                                                }
                                                                                if(donecheck6==0)
                                                                                {
                                                                                    out.print(",");
                                                                                    if(check5.next())
                                                                                    {

                                                                                        name5 = check5.getString(2);
                                                                                        String clientDetails5 = name5;
                                                                                        //System.out.println(name5);
                                                                                        out.print(clientDetails5);  
                                                                                        out.print(" ");
                                                                                        donecheck6=0;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        out.print(",");
                                                                                        donecheck6 =1;
                                                                                    }
                                                                                    out.println(" ");

                                                                                }

                                                                                else
                                                                                {
                                                                                    out.print(",");
                                                                                    donecheck5 =1;
                                                                                    out.println(" ");
                                                                                }

                                                                        }
                                                                        else
                                                                        {
                                                                            out.print(",");
                                                                            donecheck4 =1;
                                                                            out.println(" ");
                                                                        }

                                                                }
                                                                else
                                                                {
                                                                    out.print(",");
                                                                    donecheck3 =1;
                                                                    out.println(" ");
                                                                }                                                   
                                                        }
                                                        else
                                                        {
                                                            out.print(",");
                                                            donecheck2 = 1;
                                                            out.println(" ");
                                                        }

                                            }
                                    } 

                                } catch (SQLException ex) {
                                    Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                                }


                                
                                //Close the Print Writer
                                out.close();

                                //Close the File Writer
                                fw.close(); 
                               
                            } catch (IOException ex) {
                                Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                            }
                           
                    /*query = "SELECT * from client ";
                    ResultSet s = connect(query);
                    try {
                        while(s.next())
                        {
                           String year = s.getString(4).substring(0, 4);
                           String month = s.getString(4).substring(6,7);
                           
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                    }*/
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                    Date date = new Date();
                    String today;
                    today = formatter.format(date);
                    System.out.println("Today : " + today);
    }
    
    
    
     void sexIntoExcel(String service,String title,String filename)
    {
        float sexPercent[] = new float[2];
        if(service.equals("All Services")){
         
            String sexes[] = {"M","F"};
  
                        String script = "SELECT * FROM Client WHERE Client.c_gender = 'M'";
                        sexPercent[0] = this.databaseQuerying(script,"total");
                        
                        script ="SELECT * FROM Client WHERE Client.c_gender = 'F'";
                        sexPercent[1] = this.databaseQuerying(script,"total");

        }else
        {
            
             String sexes[] = {"GENDER","M","F"};
  
                        String script = "SELECT Service.s_number, " +
                        "Client.c_name, " +
                        "Client.c_gender " +
                        "FROM service " +
                        "JOIN orderService " +
                        "ON orderService.serviceNum = Service.s_number " +
                        "JOIN clientOrder " +
                        "ON clientOrder.o_number = orderService.orderNum " +
                        "JOIN client " +
                        "ON Client.c_number = clientOrder.clientID " +
                        "WHERE Service.s_name = '"+ service +"' AND Client.c_gender = 'M' "+
                        "GROUP BY Client.c_name, " +
                        "Service.s_number, " +
                        "Service.s_name";
                        sexPercent[0] = this.databaseQuerying(script,"total");
                        
                        script ="SELECT Service.s_number, " +
                        "Client.c_name, " +
                        "Client.c_gender " +
                        "FROM service " +
                        "JOIN orderService " +
                        "ON orderService.serviceNum = Service.s_number " +
                        "JOIN clientOrder " +
                        "ON clientOrder.o_number = orderService.orderNum " +
                        "JOIN client " +
                        "ON Client.c_number = clientOrder.clientID " +
                        "WHERE Service.s_name = '"+ service +"' AND Client.c_gender = 'F' "+
                        "GROUP BY Client.c_name, " +
                        "Service.s_number, " +
                        "Service.s_name";
                        sexPercent[1] = this.databaseQuerying(script,"total");
//                      JPanel report = this.drawPieChart(ageGroup,agePercent , title);
//                      return report;
        }
        
            
                        
                           String text = ("New.csv");
                            System.out.println(text);
                           String query,query1,query2,query3,query4,query5;
                                ResultSet check,check1,check2,check3,check4,check5 = null;
                            try {
                                WritableWorkbook createworkbook = Workbook.createWorkbook(new File(text));
                                createworkbook.createSheet("New", 0);
                                createworkbook.write();
                                try {
                                    createworkbook.close();
                                } catch (WriteException ex) {
                                    Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                try {
                                    Workbook workbook= Workbook.getWorkbook(new File(text));
                                } catch (BiffException ex) {
                                    Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                FileWriter fw;
                                fw = new FileWriter(filename);
                                PrintWriter out = new PrintWriter(fw);
                                int j = 0;
                                out.println(service);
                                out.println("GENDER: , MALE , FEMALE");
                                out.print("Total ,");
                                for(int ctr=0;ctr<=1;ctr++)
                                {
                                    out.print(sexPercent[ctr]+",");
                                }
                                out.print("\n");
                                System.out.println(service);
                                try 
                                {

                                    if(service.equals("All Services"))
                                    {
                                        System.out.println("ALL SERVICES DAW");
                                            query = "SELECT * FROM client";
                                            check = connect(query);
                                            query1 = "SELECT * FROM client WHERE c_gender="+"'M'";
                                            check1 = connect(query1);

                                            query2 = "SELECT * FROM client WHERE c_gender="+"'F'";
                                            check2 = connect(query2);
 
                                    }
                                    else
                                    {
                                            query = "SELECT * FROM client JOIN clientOrder on c_number=clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"s_name ="
                                                            +"'"+service+"'";
                                            check = connect(query);
                                            query1 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"c_gender="+"'M' "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check1 = connect(query1);

                                            query2 = "SELECT * FROM client JOIN clientOrder on c_number = clientID "
                                                            +"JOIN OrderService on o_number = ordernum "
                                                            +"JOIN Service on s_number = serviceNum WHERE "
                                                            +"c_gender="+"'F' "
                                                            +"AND s_name = "
                                                            +"'"+service+"'";
                                            check2 = connect(query2);

                                    }
                                    int donecheck2 = 0;
                                    int donecheck3 = 0;
                                    int donecheck4 = 0;
                                    int donecheck5 = 0;
                                    int donecheck6 = 0;
                                    int ctr = 1;
                                    int jctr = 1;
                                    int next1 = 0;
                                    int next2 = 0;
                                    int next3 = 0;
                                    int next4 = 0;
                                    String name = null;
                                    String name2 = null;
                                    String name3 = null;
                                    String name4 = null;
                                    String name5 = null;

                                    while(check.next())
                                    {
                                            if(check1.next())
                                            {
                                                name = check1.getString(2);

                                                next1 = 0;
                                            }
                                            else
                                            {
                                                next1 = 1;
                                            }
                                            if(donecheck2==0||next1==0)
                                            {
                                                out.print(",");
                                                if(next1==0)
                                                {

                                                    String clientDetails = name;
                                                    //System.out.println(name);
                                                    out.print(clientDetails);
                                                    out.print(" ");
                                                    donecheck2=0;
                                                }   

                                                        if(donecheck3==0)
                                                        {
                                                            out.print(",");
                                                            if(check2.next())
                                                            {

                                                                name2 = check2.getString(2);
                                                                String clientDetails2 = name2;
                                                                //System.out.println(name5);
                                                                out.print(clientDetails2);  
                                                                out.print(" ");
                                                                donecheck3=0;
                                                            }
                                                            else
                                                            {
                                                                out.print(",");
                                                                donecheck3 =1;
                                                            }
                                                            out.println(" ");

                                                        }
                                                        else
                                                        {
                                                            out.print(",");
                                                            donecheck2 = 1;
                                                            out.println(" ");
                                                        }

                                            }
                                    } 

                                } catch (SQLException ex) {
                                    Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                                }


                                
                                //Close the Print Writer
                                out.close();

                                //Close the File Writer
                                fw.close(); 
                               
                            } catch (IOException ex) {
                                Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                            }
                           
                    /*query = "SELECT * from client ";
                    ResultSet s = connect(query);
                    try {
                        while(s.next())
                        {
                           String year = s.getString(4).substring(0, 4);
                           String month = s.getString(4).substring(6,7);
                           
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(exportFile.class.getName()).log(Level.SEVERE, null, ex);
                    }*/
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                    Date date = new Date();
                    String today;
                    today = formatter.format(date);
                    System.out.println("Today : " + today);
    }
}
